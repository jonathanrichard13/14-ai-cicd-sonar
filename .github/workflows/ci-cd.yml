name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "master", "Module-7" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  lint:
    name: Run ESLint
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: package-lock.json
    - run: npm ci
    - name: Run ESLint
      run: npm run lint

  test:
    name: Run Tests
    needs: lint
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: package-lock.json
    - run: npm ci
    - name: Run tests
      run: npm test

  build:
    name: Build Project
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: package-lock.json
    - run: npm ci
    - name: Build
      run: npm run build

  sonarcloud:
    name: SonarCloud Analysis
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: package-lock.json
    - run: npm ci
    - run: npm test
    - name: SonarCloud Scan
      uses: SonarSource/sonarqube-scan-action@v5.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=BINAR-Learning_demo-repository
          -Dsonar.organization=binar-learning
